services:
  web:
    user: blaster:blaster
    # the application's web service (container) will use an image based on our Dockerfile
    build: .
    # map the internal port 80 to port 8000 on the host
    #expose:
    #  - "8000"
    ports:
      - "8000:8000"
    # map the host directory to app (which allows us to see and edit files inside the container)
    volumes:
      # - ".:/app:rw"
      - "./backend:/app/backend/:rw"
      - "./scripts:/app/scripts/:rw"
      - "./data:/app/data:rw"
      
    # the default command to run whenever the container is launched
    entrypoint: ["scripts/entrypoint.sh"]
    networks:
      - blaster-net
      #blaster-net:
      #  aliases: 
      #    - web
    env_file: .env-local
    #extra_hosts:
    #  - "web:127.0.0.1"

  db:
    # Select one of the following db configurations for the database
    image: postgres:15-alpine
    ports:
      - "${DB_PORT-}:5432/tcp"  # allow your local dev env to connect to the db if variable set
    environment:
      POSTGRES_DB: "droid_db"
      POSTGRES_USER: "blaster"
      POSTGRES_PASSWORD: "droid7"
      SERVICE_MANAGER: "fsm-postgres"
    networks:
      - blaster-net
      #blaster-net:
      #  aliases: 
      #    - postgres
    volumes:
       - postgres-data:/var/lib/postgresql/data/


  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: "newsithempire1@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "droid7"
    ports:
      - "5050:80" # Exposes pgAdmin on port 5050
    networks:
      - blaster-net
      #blaster-net:
      #  aliases: 
      #    - pgadmin
    volumes:
      - pgadmin-data:/var/lib/pgadmin # Persist data

  nginx:
    image: nginx:latest
    build:
      context: .
      dockerfile: nginx/nginx.Dockerfile # Explicitly specify the Dockerfile name    
    volumes:
      - "./nginx-config/nginx.conf:/etc/nginx/nginx.conf"        # Main NGINX config file
      - "./nginx-config/sites-available/default:/etc/nginx/sites-available/default"  # Site configs
      - "./nginx-config/sites-enabled/default:/etc/nginx/sites-enabled/default"
      - "./nginx-config/conf.d:/etc/nginx/conf.d"  
      
      - "/var/www/letsencrypt:/var/www/letsencrypt:rw"
      - "/var/log/nginx:/var/log/nginx:rw"
      - "/var/cache/nginx:/var/cache/nginx:rw"
      
      - "./staticfiles_collected:/app/staticfiles_collected:rw"  
      - "./data:/app/data:rw" 

      #- ./etc/nginx/certs:/etc/nginx/certs
      #- ./etc/nginx/conf.d:/etc/nginx/conf.d:rw
    networks:
      - blaster-net
    extra_hosts:
    - "web:127.0.0.1"
      #blaster-net:
      #  aliases:
      #    - nginx
    ports:
      - 80:80
      - 443:443
    depends_on:
      - web
    #links:
    #  - web:web

networks:
  blaster-net:
    driver: bridge

volumes:
  postgres-data:
    driver: local
  pgadmin-data:
    driver: local
  nginx-config:
    driver: local
